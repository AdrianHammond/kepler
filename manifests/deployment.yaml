apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: kepler-node-clusterrole
  namespace: default
rules:
- apiGroups: [""]
  resources:
  - nodes/metrics
  - nodes/proxy #access /pods
  - nodes/stats
  verbs:
  - 'get'
  - 'watch'
  - 'list'
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: kepler-node-clusterrole-binding
  namespace: default
roleRef:
  kind: ClusterRole
  name: kepler-node-clusterrole
  apiGroup: "rbac.authorization.k8s.io"
subjects:
- kind: ServiceAccount
  name: kepler-node-sa
  namespace: default
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: kepler-node-sa
  namespace: default
---
apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: kepler-node-daemon
  namespace: default
spec:
  selector:
    matchLabels:
      name: kepler-node-daemon
  template:
    metadata:
      labels:
        name: kepler-node-daemon
      annotations:
        prometheus.io/scrape: 'true'
        prometheus.io/port: '9102'        
    spec:
      hostNetwork: true
      serviceAccountName: kepler-node-sa
      containers:
      - name: kepler-node-daemon
        image: quay.io/sustainable_computing_io/kepler:latest
        imagePullPolicy: Always
        securityContext:
          privileged: true
        command:
        - /usr/bin/kepler
        - -address
        - 0.0.0.0:9102
        ports:
        - containerPort: 9102
        volumeMounts:
        - mountPath: /lib/modules
          name: lib-modules
        - mountPath: /sys
          name: tracing
        env:
        - name: NODE_NAME
          valueFrom:
            fieldRef:
              fieldPath: spec.nodeName
      volumes:
      - name: lib-modules
        hostPath:
          path: /lib/modules
          type: Directory
      - name: tracing
        hostPath:
          path: /sys
          type: Directory
